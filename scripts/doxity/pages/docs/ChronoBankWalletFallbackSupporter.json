{"fileName":"/contracts/assets/ChronoBankWalletFallbackSupporter.sol","name":"ChronoBankWalletFallbackSupporter","abi":[{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"}],"name":"fallbackAsset","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"},{"name":"_to","type":"address"}],"name":"fallbackAssetPassOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_identifier","type":"bytes32"}],"name":"lookupManager","outputs":[{"name":"manager","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"},{"name":"_from","type":"address"},{"name":"_data","type":"bytes"}],"name":"fallbackAssetInvoke","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"contractsManager","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pendingContractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"setContractsManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"contractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"key","type":"address"}],"name":"isAuthorized","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_store","type":"address"},{"name":"_crate","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"source":"pragma solidity ^0.4.11;\n\nimport \"./TokenExtensionFallbackInterface.sol\";\nimport \"../core/common/Managed.sol\";\nimport \"../core/platform/ChronoBankPlatformInterface.sol\";\nimport \"../assets/AssetsManagerInterface.sol\";\nimport \"../assets/TokenManagementInterface.sol\";\n\n/**\n* @title This contract is currently deprecated and should not be used througout the system.\n* Initial idea that stands behind its creation was supporting old implementation of\n* ChronoBankPlatform to be compatible with token extensions and assets manager. But since\n* this implementation is currently used only for hosting TIME tokens and all new tokens\n* will be created on another version of platform contract, so it is obvious not to use\n* it anymore\n*\n* DEPRECATED.\n*/\ncontract ChronoBankWalletFallbackSupporter is Managed, TokenExtensionFallbackInterface {\n\n    /**\n    * @dev Guards methods for calling only by one of platform token extensions.\n    */\n    modifier onlyTokenExtension() {\n        if (!TokenExtensionRegistry(lookupManager(\"AssetsManager\")).containsTokenExtension(msg.sender)) {\n            revert();\n        }\n        _;\n    }\n\n    function ChronoBankWalletFallbackSupporter(Storage _store, bytes32 _crate) Managed(_store, _crate) {\n    }\n\n    /**\n    * @dev Designed to check if a wallet supports fallback interface. Should be simple and return `true` or `false`\n    * depending on wether a contract wants to support this interface or not.\n    *\n    * @param _symbol asset's symbol\n    *\n    * @return `true` if a contract (wallet) supports fallback interface, `false` otherwise\n    */\n    function fallbackAsset(bytes32 _symbol) public onlyTokenExtension returns (bool)  {\n        return true;\n    }\n\n    /**\n    * @dev Defines main operation that will be performed throughout fallback interface. This method will be invoked only in case\n    * if `fallbackAsset` returns `true`. Purpose is to delegate invocation of any method that contract is allowed to call to\n    * a token extension.\n    *\n    * @param _symbol asset's symbol\n    * @param _from destination of calling. Contract that will be proposed to be called with data\n    * @param _data data passed to `call` on _from address\n    *\n    * @return `true` if call is successful, `false` otherwise\n    */\n    function fallbackAssetInvoke(bytes32 _symbol, address _from, bytes _data) public onlyTokenExtension returns (bool) {\n        return _from.call(_data);\n    }\n\n    /**\n    * @dev Helper method to provide a way to pass ownership of the platform after all operations are done to its real owner.\n    *\n    * @param _symbol asset's symbol\n    * @param _to real platform owner\n    *\n    * @return `true` if passing ownership is successful, `false` otherwise\n    */\n    function fallbackAssetPassOwnership(bytes32 _symbol, address _to) public onlyTokenExtension returns (bool) {\n        address _platform = TokenManagementInterface(msg.sender).platform();\n        return ChronoBankPlatformInterface(_platform).changeOwnership(_symbol, _to) == OK;\n    }\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"}],"name":"fallbackAsset","payable":false,"stateMutability":"nonpayable","type":"function","signature":"fallbackAsset(bytes32)","signatureHash":"306a547d"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"},{"name":"_to","type":"address"}],"name":"fallbackAssetPassOwnership","payable":false,"stateMutability":"nonpayable","type":"function","signature":"fallbackAssetPassOwnership(bytes32,address)","signatureHash":"44fc19cc"},{"constant":false,"inputs":[],"name":"claimContractOwnership","payable":false,"stateMutability":"nonpayable","type":"function","signature":"claimContractOwnership()","signatureHash":"4592cd1d"},{"constant":true,"inputs":[{"name":"_identifier","type":"bytes32"}],"name":"lookupManager","payable":false,"stateMutability":"view","type":"function","signature":"lookupManager(bytes32)","signatureHash":"4fe59012"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"},{"name":"_from","type":"address"},{"name":"_data","type":"bytes"}],"name":"fallbackAssetInvoke","payable":false,"stateMutability":"nonpayable","type":"function","signature":"fallbackAssetInvoke(bytes32,address,bytes)","signatureHash":"51ae07d9"},{"constant":true,"inputs":[],"name":"contractsManager","payable":false,"stateMutability":"view","type":"function","signature":"contractsManager()","signatureHash":"53253d31"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","payable":false,"stateMutability":"nonpayable","type":"function","signature":"changeContractOwnership(address)","signatureHash":"557f4bc9"},{"constant":true,"inputs":[],"name":"pendingContractOwner","payable":false,"stateMutability":"view","type":"function","signature":"pendingContractOwner()","signatureHash":"5aa77d3c"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"setContractsManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"setContractsManager(address)","signatureHash":"71d3b573"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"destroy()","signatureHash":"83197ef0"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","payable":false,"stateMutability":"nonpayable","type":"function","signature":"transferContractOwnership(address)","signatureHash":"a843c51f"},{"constant":true,"inputs":[],"name":"contractOwner","payable":false,"stateMutability":"view","type":"function","signature":"contractOwner()","signatureHash":"ce606ee0"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","payable":false,"stateMutability":"nonpayable","type":"function","signature":"withdrawnTokens(address[],address)","signatureHash":"d8f9659b"},{"constant":true,"inputs":[{"name":"key","type":"address"}],"name":"isAuthorized","payable":false,"stateMutability":"view","type":"function","signature":"isAuthorized(address)","signatureHash":"fe9fbb80"},{"inputs":[{"name":"_store","type":"address"},{"name":"_crate","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]}
