{"title":"Serves as a middleware that passes asset ownership changes to AssetsManager. Originally was designed as part of the system to provide a way to collect statistics for a frontend. * DEPRECATED.","fileName":"/contracts/assets/AssetOwnershipDelegateResolver.sol","name":"AssetOwnershipDelegateResolver","abi":[{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"init","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"},{"name":"_platform","type":"address"},{"name":"_owner","type":"address"}],"name":"assetOwnerRemoved","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pendingContractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"},{"name":"_platform","type":"address"},{"name":"_owner","type":"address"}],"name":"assetOwnerAdded","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"contractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"source":"pragma solidity ^0.4.11;\n\nimport \"./../core/common/Owned.sol\";\nimport \"./../core/contracts/ContractsManagerInterface.sol\";\nimport \"./extensions/PlatformTokenExtensionGatewayManagerEmitter.sol\";\nimport \"./../core/platform/ChronoBankPlatform.sol\";\nimport \"./PlatformsManagerInterface.sol\";\n\n/**\n* @title Serves as a middleware that passes asset ownership changes to AssetsManager.\n* Originally was designed as part of the system to provide a way to collect statistics\n* for a frontend.\n*\n* DEPRECATED.\n*/\ncontract AssetOwnershipDelegateResolver is Owned, AssetOwningListener {\n    uint constant OK = 1;\n\n    /** @dev address of ContractsManager contract interface */\n    address internal contractsManager;\n\n    /**\n    * @dev Guards methods to be called only by PlatformsManager or by ChronoBankPlatform instance\n    */\n    modifier onlyRegisteredPlatformOrManager(address _platform) {\n        address _platformManager = lookupManager(\"PlatformsManager\");\n        if ((_platform == msg.sender && PlatformsManagerInterface(_platformManager).isPlatformAttached(_platform)) ||\n            msg.sender == _platformManager)\n        {\n            _;\n        }\n    }\n\n    function AssetOwnershipDelegateResolver() public {\n    }\n\n    function init(address _contractsManager) onlyContractOwner public returns (uint) {\n        require(_contractsManager != 0x0);\n        contractsManager = _contractsManager;\n        return ContractsManagerInterface(_contractsManager).addContract(this, \"AssetOwnershipResolver\");\n    }\n\n    function lookupManager(bytes32 _identifier) private constant returns (address _manager) {\n        _manager = ContractsManagerInterface(contractsManager).getContractAddressByType(_identifier);\n        require(_manager != 0x0);\n    }\n\n    /**\n    * @dev Implementation of AssetOwningListener interface method. Redirects invocation to AssetsManager implementation.\n    *\n    * @param _symbol asset's symbol\n    * @param _platform platform involved\n    * @param _owner added owner to an asset in a platform\n    *\n    */\n    function assetOwnerAdded(bytes32 _symbol, address _platform, address _owner) onlyRegisteredPlatformOrManager(_platform) public {\n        AssetOwningListener(lookupManager(\"AssetsManager\")).assetOwnerAdded(_symbol, _platform, _owner);\n    }\n\n    /**\n    * @dev Implementation of AssetOwningListener interface method. Redirects invocation to AssetsManager implementation.\n    *\n    * @param _symbol asset's symbol\n    * @param _platform platform involved\n    * @param _owner removed owner to an asset in a platform\n    *\n    */\n    function assetOwnerRemoved(bytes32 _symbol, address _platform, address _owner) onlyRegisteredPlatformOrManager(_platform) public {\n        AssetOwningListener(lookupManager(\"AssetsManager\")).assetOwnerRemoved(_symbol, _platform, _owner);\n    }\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"init","payable":false,"stateMutability":"nonpayable","type":"function","signature":"init(address)","signatureHash":"19ab453c"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32","description":"asset's symbol"},{"name":"_platform","type":"address","description":"platform involved"},{"name":"_owner","type":"address","description":"removed owner to an asset in a platform    "}],"name":"assetOwnerRemoved","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Implementation of AssetOwningListener interface method. Redirects invocation to AssetsManager implementation.","signature":"assetOwnerRemoved(bytes32,address,address)","signatureHash":"26046743"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Finalize ownership pass.     * Can only be called by pending owner.","signature":"claimContractOwnership()","signatureHash":"4592cd1d"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"address of the next owner. 0x0 is not allowed."}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Prepares ownership pass.     * Can only be called by current owner.","signature":"changeContractOwnership(address)","signatureHash":"557f4bc9"},{"constant":true,"inputs":[],"name":"pendingContractOwner","payable":false,"stateMutability":"view","type":"function","signature":"pendingContractOwner()","signatureHash":"5aa77d3c"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32","description":"asset's symbol"},{"name":"_platform","type":"address","description":"platform involved"},{"name":"_owner","type":"address","description":"added owner to an asset in a platform    "}],"name":"assetOwnerAdded","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Implementation of AssetOwningListener interface method. Redirects invocation to AssetsManager implementation.","signature":"assetOwnerAdded(bytes32,address,address)","signatureHash":"660a333e"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Destroy contract and scrub a data","notice":"Only owner can call it","signature":"destroy()","signatureHash":"83197ef0"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"the next contract owner"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Direct ownership pass without change/claim pattern. Can be invoked only by current contract owner","return":"`true` if success, `false` otherwise","signature":"transferContractOwnership(address)","signatureHash":"a843c51f"},{"constant":true,"inputs":[],"name":"contractOwner","payable":false,"stateMutability":"view","type":"function","signature":"contractOwner()","signatureHash":"ce606ee0"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]}
