{"fileName":"/contracts/timeholder/FeatureFeeManager.sol","name":"FeatureFeeManager","abi":[{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"init","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"code","type":"address"},{"name":"sig","type":"bytes4"}],"name":"requiredBalanceFor","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_identifier","type":"bytes32"}],"name":"lookupManager","outputs":[{"name":"manager","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"contractsManager","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pendingContractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_eventsHistory","type":"address"}],"name":"setEventsHistory","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"executor","type":"address"},{"name":"code","type":"address"},{"name":"featureSig","type":"bytes4"}],"name":"isExecutionAllowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"setContractsManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"executor","type":"address"},{"name":"code","type":"address"},{"name":"featureSig","type":"bytes4"}],"name":"takeExecutionFee","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"code","type":"address"},{"name":"sig","type":"bytes4"}],"name":"priceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"contractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"code","type":"address"},{"name":"sig","type":"bytes4"},{"name":"requiredBalance","type":"uint256"},{"name":"price","type":"uint256"}],"name":"setFeatureFee","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"key","type":"address"}],"name":"isAuthorized","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEventsHistory","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_store","type":"address"},{"name":"_crate","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"source":"pragma solidity ^0.4.11;\n\nimport {ContractsManager as ContractsRegistry} from \"../core/contracts/ContractsManager.sol\";\nimport \"../core/common/BaseManager.sol\";\nimport \"./TimeHolderInterface.sol\";\n\ncontract FeatureFeeManager is BaseManager {\n    StorageInterface.Bytes32UIntMapping requiredBalances;\n    StorageInterface.Bytes32UIntMapping prices;\n\n    modifier checkExecutor(address executor) {\n        if (executor == tx.origin) {\n            _;\n        }\n    }\n\n    function FeatureFeeManager(Storage _store, bytes32 _crate) BaseManager(_store, _crate) {\n        prices.init(\"prices\");\n        requiredBalances.init(\"requiredBalances\");\n    }\n\n    function init(address _contractsManager) onlyContractOwner returns (uint) {\n        BaseManager.init(_contractsManager, \"FeatureFeeManager\");\n        return OK;\n    }\n\n    function setFeatureFee(address code, bytes4 sig, uint requiredBalance, uint price) onlyContractOwner {\n        require(code != 0x0);\n        require(sig != 0x0);\n        require(requiredBalance >= price);\n\n        store.set(requiredBalances, sha3(code, sig), requiredBalance);\n        store.set(prices, sha3(code, sig), price);\n    }\n\n    function requiredBalanceFor(address code, bytes4 sig) constant returns (uint) {\n        return store.get(requiredBalances, sha3(code, sig));\n    }\n\n    function priceOf(address code, bytes4 sig) constant returns (uint) {\n        return store.get(prices, sha3(code, sig));\n    }\n\n    function isExecutionAllowed(address executor, address code, bytes4 featureSig) returns (bool) {\n        require(executor != 0x0);\n        require(code != 0x0);\n        require(featureSig != 0x0);\n\n        uint requiredBalance = requiredBalanceFor(code, featureSig);\n\n        if (requiredBalance == 0) {\n            return true;\n        }\n\n        TimeHolderInterface timeHolder = TimeHolderInterface(lookupManager(\"TimeHolder\"));\n        uint balance = timeHolder.depositBalance(executor);\n\n        return balance >= requiredBalance;\n    }\n\n    function takeExecutionFee(address executor, address code, bytes4 featureSig) checkExecutor(executor) returns (uint) {\n        require(executor != 0x0);\n        require(code != 0x0);\n        require(featureSig != 0x0);\n\n        uint price = priceOf(code, featureSig);\n\n        if (price == 0) {\n            return OK;\n        }\n\n        TimeHolderInterface timeHolder = TimeHolderInterface(lookupManager(\"TimeHolder\"));\n        return timeHolder.takeFeatureFee(executor, price);\n    }\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"init","payable":false,"stateMutability":"nonpayable","type":"function","signature":"init(address)","signatureHash":"19ab453c"},{"constant":true,"inputs":[{"name":"code","type":"address"},{"name":"sig","type":"bytes4"}],"name":"requiredBalanceFor","payable":false,"stateMutability":"view","type":"function","signature":"requiredBalanceFor(address,bytes4)","signatureHash":"2a2cbf78"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Finalize ownership pass.     * Can only be called by pending owner.","signature":"claimContractOwnership()","signatureHash":"4592cd1d"},{"constant":true,"inputs":[{"name":"_identifier","type":"bytes32","description":"is a manager's identifier. 0x0 is not allowed."}],"name":"lookupManager","payable":false,"stateMutability":"view","type":"function","details":"Returns manager's address by its identifier (type).","notice":"Will crash if no manager in the system with given identifier.","signature":"lookupManager(bytes32)","signatureHash":"4fe59012"},{"constant":true,"inputs":[],"name":"contractsManager","payable":false,"stateMutability":"view","type":"function","signature":"contractsManager()","signatureHash":"53253d31"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"address of the next owner. 0x0 is not allowed."}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Prepares ownership pass.     * Can only be called by current owner.","signature":"changeContractOwnership(address)","signatureHash":"557f4bc9"},{"constant":true,"inputs":[],"name":"pendingContractOwner","payable":false,"stateMutability":"view","type":"function","signature":"pendingContractOwner()","signatureHash":"5aa77d3c"},{"constant":false,"inputs":[{"name":"_eventsHistory","type":"address"}],"name":"setEventsHistory","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"setEventsHistory(address)","signatureHash":"6521afd7"},{"constant":false,"inputs":[{"name":"executor","type":"address"},{"name":"code","type":"address"},{"name":"featureSig","type":"bytes4"}],"name":"isExecutionAllowed","payable":false,"stateMutability":"nonpayable","type":"function","signature":"isExecutionAllowed(address,address,bytes4)","signatureHash":"709586c1"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address","description":"contracts manager. 0x0 is not allowed."}],"name":"setContractsManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Setter for ContractsManager. Force overrides currect manager.","signature":"setContractsManager(address)","signatureHash":"71d3b573"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"destroy()","signatureHash":"83197ef0"},{"constant":false,"inputs":[{"name":"executor","type":"address"},{"name":"code","type":"address"},{"name":"featureSig","type":"bytes4"}],"name":"takeExecutionFee","payable":false,"stateMutability":"nonpayable","type":"function","signature":"takeExecutionFee(address,address,bytes4)","signatureHash":"84509ca8"},{"constant":true,"inputs":[{"name":"code","type":"address"},{"name":"sig","type":"bytes4"}],"name":"priceOf","payable":false,"stateMutability":"view","type":"function","signature":"priceOf(address,bytes4)","signatureHash":"a6a4339c"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"the next contract owner"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Direct ownership pass without change/claim pattern. Can be invoked only by current contract owner","return":"`true` if success, `false` otherwise","signature":"transferContractOwnership(address)","signatureHash":"a843c51f"},{"constant":true,"inputs":[],"name":"contractOwner","payable":false,"stateMutability":"view","type":"function","signature":"contractOwner()","signatureHash":"ce606ee0"},{"constant":false,"inputs":[{"name":"code","type":"address"},{"name":"sig","type":"bytes4"},{"name":"requiredBalance","type":"uint256"},{"name":"price","type":"uint256"}],"name":"setFeatureFee","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"setFeatureFee(address,bytes4,uint256,uint256)","signatureHash":"d5224d44"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","payable":false,"stateMutability":"nonpayable","type":"function","signature":"withdrawnTokens(address[],address)","signatureHash":"d8f9659b"},{"constant":true,"inputs":[{"name":"key","type":"address"}],"name":"isAuthorized","payable":false,"stateMutability":"view","type":"function","signature":"isAuthorized(address)","signatureHash":"fe9fbb80"},{"constant":true,"inputs":[],"name":"getEventsHistory","payable":false,"stateMutability":"view","type":"function","signature":"getEventsHistory()","signatureHash":"fff10aba"},{"inputs":[{"name":"_store","type":"address"},{"name":"_crate","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]}
