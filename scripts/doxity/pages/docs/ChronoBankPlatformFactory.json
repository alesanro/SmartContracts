{"title":"Implementation of platform factory to create exactly ChronoBankPlatform contract instances.","fileName":"/contracts/core/platform/ChronoBankPlatformFactory.sol","name":"ChronoBankPlatformFactory","abi":[{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pendingContractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_ownershipResolver","type":"address"}],"name":"setOwnershipResolver","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"","type":"address"},{"name":"eventsHistory","type":"address"},{"name":"eventsHistoryAdmin","type":"address"}],"name":"createPlatform","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"contractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_ownershipResolver","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"source":"pragma solidity ^0.4.11;\n\nimport \"./ChronoBankPlatform.sol\";\nimport \"../event/MultiEventsHistory.sol\";\nimport \"../common/Owned.sol\";\nimport \"../contracts/ContractsManagerInterface.sol\";\n\n/**\n* @title Implementation of platform factory to create exactly ChronoBankPlatform contract instances.\n*/\ncontract ChronoBankPlatformFactory is Owned {\n\n    /** @dev DEPRECATED. WILL BE REMOVED IN NEXT RELEASES */\n    address ownershipResolver;\n\n    function ChronoBankPlatformFactory(address _ownershipResolver) public {\n        require(_ownershipResolver != 0x0);\n\n        ownershipResolver = _ownershipResolver;\n    }\n\n    function setOwnershipResolver(address _ownershipResolver) onlyContractOwner public {\n        require(_ownershipResolver != 0x0);\n        ownershipResolver = _ownershipResolver;\n    }\n\n    /**\n    * @dev Creates a brand new platform and transfers platform ownership to msg.sender\n    */\n    function createPlatform(address, MultiEventsHistory eventsHistory, address eventsHistoryAdmin) public returns(address) {\n        ChronoBankPlatform platform = new ChronoBankPlatform();\n        eventsHistory.authorize(platform);\n        platform.setupEventsAdmin(eventsHistoryAdmin);\n        platform.setupEventsHistory(eventsHistory);\n        platform.setupAssetOwningListener(ownershipResolver);\n        platform.transferContractOwnership(msg.sender);\n        return platform;\n    }\n}\n","abiDocs":[{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Finalize ownership pass.     * Can only be called by pending owner.","signature":"claimContractOwnership()","signatureHash":"4592cd1d"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"address of the next owner. 0x0 is not allowed."}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Prepares ownership pass.     * Can only be called by current owner.","signature":"changeContractOwnership(address)","signatureHash":"557f4bc9"},{"constant":true,"inputs":[],"name":"pendingContractOwner","payable":false,"stateMutability":"view","type":"function","signature":"pendingContractOwner()","signatureHash":"5aa77d3c"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Destroy contract and scrub a data","notice":"Only owner can call it","signature":"destroy()","signatureHash":"83197ef0"},{"constant":false,"inputs":[{"name":"_ownershipResolver","type":"address"}],"name":"setOwnershipResolver","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"setOwnershipResolver(address)","signatureHash":"a38dca51"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"the next contract owner"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Direct ownership pass without change/claim pattern. Can be invoked only by current contract owner","return":"`true` if success, `false` otherwise","signature":"transferContractOwnership(address)","signatureHash":"a843c51f"},{"constant":false,"inputs":[{"name":"","type":"address"},{"name":"eventsHistory","type":"address"},{"name":"eventsHistoryAdmin","type":"address"}],"name":"createPlatform","payable":false,"stateMutability":"nonpayable","type":"function","details":"Creates a brand new platform and transfers platform ownership to msg.sender","signature":"createPlatform(address,address,address)","signatureHash":"af34be40"},{"constant":true,"inputs":[],"name":"contractOwner","payable":false,"stateMutability":"view","type":"function","signature":"contractOwner()","signatureHash":"ce606ee0"},{"inputs":[{"name":"_ownershipResolver","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]}
