{"title":"CrowdsaleManager *  Is not designed for direct crowdsale management via external calls from web application. *  Only AssetsManager is authorised to execute CrowdsaleManager's methods.","fileName":"/contracts/crowdsale/CrowdsaleManager.sol","name":"CrowdsaleManager","abi":[{"constant":false,"inputs":[{"name":"crowdsale","type":"address"}],"name":"emitCrowdsaleDeleted","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"init","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_identifier","type":"bytes32"}],"name":"lookupManager","outputs":[{"name":"manager","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"contractsManager","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pendingContractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_eventsHistory","type":"address"}],"name":"setEventsHistory","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_creator","type":"address"},{"name":"_symbol","type":"bytes32"},{"name":"_factoryName","type":"bytes32"}],"name":"createCrowdsale","outputs":[{"name":"","type":"address"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"setContractsManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"creator","type":"address"},{"name":"symbol","type":"bytes32"},{"name":"crowdsale","type":"address"}],"name":"emitCrowdsaleCreated","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"contractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"errorCode","type":"uint256"}],"name":"emitError","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_factoryName","type":"bytes32"}],"name":"getCrowdsaleFactory","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"crowdsale","type":"address"}],"name":"deleteCrowdsale","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"key","type":"address"}],"name":"isAuthorized","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEventsHistory","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_store","type":"address"},{"name":"_crate","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"creator","type":"address"},{"indexed":false,"name":"symbol","type":"bytes32"},{"indexed":false,"name":"crowdsale","type":"address"}],"name":"CrowdsaleCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":false,"name":"crowdsale","type":"address"}],"name":"CrowdsaleDeleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":false,"name":"errorCode","type":"uint256"}],"name":"Error","type":"event"}],"source":"pragma solidity ^0.4.11;\n\nimport \"../core/common/BaseManager.sol\";\nimport \"../assets/AssetsManagerInterface.sol\";\nimport \"./base/BaseCrowdsale.sol\";\nimport \"./CrowdsaleFactory.sol\";\nimport \"./CrowdsaleManagerEmitter.sol\";\n\n/**\n *  @title CrowdsaleManager\n *\n *  Is not designed for direct crowdsale management via external calls\n *  from web application.\n *\n *  Only AssetsManager is authorised to execute CrowdsaleManager's methods.\n */\ncontract CrowdsaleManager is CrowdsaleManagerEmitter, BaseManager {\n    uint constant ERROR_CROWDFUNDING_INVALID_INVOCATION = 3000;\n    uint constant ERROR_CROWDFUNDING_ADD_CONTRACT = 3001;\n    uint constant ERROR_CROWDFUNDING_NOT_ASSET_OWNER = 3002;\n    uint constant ERROR_CROWDFUNDING_DOES_NOT_EXIST = 3003;\n\n    StorageInterface.AddressesSet compains;\n\n    modifier onlyAssetAuthorizedContract() {\n        if (!TokenExtensionRegistry(lookupManager(\"AssetsManager\")).containsTokenExtension(msg.sender)) return;\n        _;\n    }\n\n    /**\n    *  Constructor\n    */\n    function CrowdsaleManager(Storage _store, bytes32 _crate) BaseManager(_store, _crate) {\n        compains.init('compains');\n    }\n\n    /**\n    *  Initialize\n    */\n    function init(address _contractsManager) onlyContractOwner returns (uint) {\n        BaseManager.init(_contractsManager, \"CrowdsaleManager\");\n\n        return OK;\n    }\n\n    /**\n    *  Creates Crowdsale with a type produced by CrowdsaleFactory with given _factoryName.\n    */\n    function createCrowdsale(address _creator, bytes32 _symbol, bytes32 _factoryName)\n    onlyAssetAuthorizedContract\n    returns (address, uint) {\n        if (!lookupAssetsManager().isAssetOwner(_symbol, _creator)) {\n            return (0x0, _emitError(ERROR_CROWDFUNDING_NOT_ASSET_OWNER));\n        }\n\n        address crowdsale = getCrowdsaleFactory(_factoryName).createCrowdsale(_symbol);\n\n        if (!BaseCrowdsale(crowdsale).claimContractOwnership()) {\n            return (0x0, _emitError(ERROR_CROWDFUNDING_INVALID_INVOCATION));\n        }\n\n        store.add(compains, crowdsale);\n        _emitCrowdsaleCreated(_creator, _symbol, crowdsale);\n\n        return (crowdsale, OK);\n    }\n\n    /**\n    *  Deletes Crowdsale if It is allowed.\n    */\n    function deleteCrowdsale(address crowdsale) onlyAssetAuthorizedContract returns (uint) {\n        if (!lookupAssetsManager().isAssetOwner(BaseCrowdsale(crowdsale).getSymbol(), crowdsale)) {\n            return _emitError(ERROR_CROWDFUNDING_NOT_ASSET_OWNER);\n        }\n\n        if (!store.includes(compains, crowdsale)) {\n            return _emitError(ERROR_CROWDFUNDING_DOES_NOT_EXIST);\n        }\n\n        if (!BaseCrowdsale(crowdsale).hasEnded()) {\n            return _emitError(ERROR_CROWDFUNDING_INVALID_INVOCATION);\n        }\n\n        store.remove(compains, crowdsale);\n\n        BaseCrowdsale(crowdsale).destroy(); // TODO: @ahiatsevich refund to CrowdsaleManager??\n\n        _emitCrowdsaleDeleted(crowdsale);\n        return OK;\n    }\n\n    /**\n    *  Returns CrowdsaleFactory by given _factoryName.\n    */\n    function getCrowdsaleFactory(bytes32 _factoryName) constant returns (CrowdsaleFactory) {\n        return CrowdsaleFactory(lookupManager(_factoryName));\n    }\n\n    /**\n    *  Returns AssetsManager.\n    */\n    function lookupAssetsManager() internal constant returns (AssetsManagerInterface) {\n        return AssetsManagerInterface(lookupManager(\"AssetsManager\"));\n    }\n\n    function _emitCrowdsaleCreated(address creator, bytes32 symbol, address crowdsale) internal {\n        CrowdsaleManager(getEventsHistory()).emitCrowdsaleCreated(creator, symbol, crowdsale);\n    }\n\n    function _emitCrowdsaleDeleted(address crowdsale) internal {\n        CrowdsaleManager(getEventsHistory()).emitCrowdsaleDeleted(crowdsale);\n    }\n\n    function _emitError(uint error) internal returns (uint) {\n        CrowdsaleManager(getEventsHistory()).emitError(error);\n        return error;\n    }\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"crowdsale","type":"address"}],"name":"emitCrowdsaleDeleted","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"emitCrowdsaleDeleted(address)","signatureHash":"07a43948"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"init","payable":false,"stateMutability":"nonpayable","type":"function","notice":"Initialize","signature":"init(address)","signatureHash":"19ab453c"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Finalize ownership pass.     * Can only be called by pending owner.","signature":"claimContractOwnership()","signatureHash":"4592cd1d"},{"constant":true,"inputs":[{"name":"_identifier","type":"bytes32","description":"is a manager's identifier. 0x0 is not allowed."}],"name":"lookupManager","payable":false,"stateMutability":"view","type":"function","details":"Returns manager's address by its identifier (type).","notice":"Will crash if no manager in the system with given identifier.","signature":"lookupManager(bytes32)","signatureHash":"4fe59012"},{"constant":true,"inputs":[],"name":"contractsManager","payable":false,"stateMutability":"view","type":"function","signature":"contractsManager()","signatureHash":"53253d31"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"address of the next owner. 0x0 is not allowed."}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Prepares ownership pass.     * Can only be called by current owner.","signature":"changeContractOwnership(address)","signatureHash":"557f4bc9"},{"constant":true,"inputs":[],"name":"pendingContractOwner","payable":false,"stateMutability":"view","type":"function","signature":"pendingContractOwner()","signatureHash":"5aa77d3c"},{"constant":false,"inputs":[{"name":"_eventsHistory","type":"address"}],"name":"setEventsHistory","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"setEventsHistory(address)","signatureHash":"6521afd7"},{"constant":false,"inputs":[{"name":"_creator","type":"address"},{"name":"_symbol","type":"bytes32"},{"name":"_factoryName","type":"bytes32"}],"name":"createCrowdsale","payable":false,"stateMutability":"nonpayable","type":"function","notice":"Creates Crowdsale with a type produced by CrowdsaleFactory with given _factoryName.","signature":"createCrowdsale(address,bytes32,bytes32)","signatureHash":"690719ff"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address","description":"contracts manager. 0x0 is not allowed."}],"name":"setContractsManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Setter for ContractsManager. Force overrides currect manager.","signature":"setContractsManager(address)","signatureHash":"71d3b573"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"destroy()","signatureHash":"83197ef0"},{"constant":false,"inputs":[{"name":"creator","type":"address"},{"name":"symbol","type":"bytes32"},{"name":"crowdsale","type":"address"}],"name":"emitCrowdsaleCreated","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"emitCrowdsaleCreated(address,bytes32,address)","signatureHash":"88df7f08"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"the next contract owner"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Direct ownership pass without change/claim pattern. Can be invoked only by current contract owner","return":"`true` if success, `false` otherwise","signature":"transferContractOwnership(address)","signatureHash":"a843c51f"},{"constant":true,"inputs":[],"name":"contractOwner","payable":false,"stateMutability":"view","type":"function","signature":"contractOwner()","signatureHash":"ce606ee0"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","payable":false,"stateMutability":"nonpayable","type":"function","signature":"withdrawnTokens(address[],address)","signatureHash":"d8f9659b"},{"constant":false,"inputs":[{"name":"errorCode","type":"uint256"}],"name":"emitError","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"emitError(uint256)","signatureHash":"df26ca08"},{"constant":true,"inputs":[{"name":"_factoryName","type":"bytes32"}],"name":"getCrowdsaleFactory","payable":false,"stateMutability":"view","type":"function","notice":"Returns CrowdsaleFactory by given _factoryName.","signature":"getCrowdsaleFactory(bytes32)","signatureHash":"e7c360c1"},{"constant":false,"inputs":[{"name":"crowdsale","type":"address"}],"name":"deleteCrowdsale","payable":false,"stateMutability":"nonpayable","type":"function","notice":"Deletes Crowdsale if It is allowed.","signature":"deleteCrowdsale(address)","signatureHash":"eae224b6"},{"constant":true,"inputs":[{"name":"key","type":"address"}],"name":"isAuthorized","payable":false,"stateMutability":"view","type":"function","signature":"isAuthorized(address)","signatureHash":"fe9fbb80"},{"constant":true,"inputs":[],"name":"getEventsHistory","payable":false,"stateMutability":"view","type":"function","signature":"getEventsHistory()","signatureHash":"fff10aba"},{"inputs":[{"name":"_store","type":"address"},{"name":"_crate","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"creator","type":"address"},{"indexed":false,"name":"symbol","type":"bytes32"},{"indexed":false,"name":"crowdsale","type":"address"}],"name":"CrowdsaleCreated","type":"event","signature":"CrowdsaleCreated(address,address,bytes32,address)","signatureHash":"7426fc13"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":false,"name":"crowdsale","type":"address"}],"name":"CrowdsaleDeleted","type":"event","signature":"CrowdsaleDeleted(address,address)","signatureHash":"699a26ba"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":false,"name":"errorCode","type":"uint256"}],"name":"Error","type":"event","signature":"Error(address,uint256)","signatureHash":"9cf38cf2"}]}
