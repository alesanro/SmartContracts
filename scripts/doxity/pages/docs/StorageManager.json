{"fileName":"/contracts/core/storage/StorageManager.sol","name":"StorageManager","abi":[{"constant":false,"inputs":[{"name":"_user","type":"address"},{"name":"_role","type":"bytes32"}],"name":"emitAccessBlocked","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_user","type":"address"},{"name":"_role","type":"bytes32"}],"name":"emitAccessGiven","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pendingContractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_actor","type":"address"},{"name":"_role","type":"bytes32"}],"name":"isAllowed","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"accessRights","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_actor","type":"address"},{"name":"_role","type":"bytes32"}],"name":"giveAccess","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_actor","type":"address"}],"name":"hasAccess","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_actor","type":"address"},{"name":"_role","type":"bytes32"}],"name":"blockAccess","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"contractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"authorised","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":false,"name":"actor","type":"address"},{"indexed":false,"name":"role","type":"bytes32"}],"name":"AccessGiven","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":false,"name":"actor","type":"address"},{"indexed":false,"name":"role","type":"bytes32"}],"name":"AccessBlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":false,"name":"errorCode","type":"uint256"}],"name":"Error","type":"event"}],"source":"pragma solidity ^0.4.11;\n\nimport '../common/Object.sol';\nimport '../event/MultiEventsHistoryAdapter.sol';\n\ncontract StorageManager is MultiEventsHistoryAdapter, Object {\n\n    uint constant ERROR_STORAGE_INVALID_INVOCATION = 5000;\n\n    event AccessGiven(address indexed self, address actor, bytes32 role);\n    event AccessBlocked(address indexed self, address actor, bytes32 role);\n    event Error(address indexed self, uint errorCode);\n\n    mapping (address => uint) public authorised;\n    mapping (bytes32 => bool) public accessRights;\n\n    function giveAccess(address _actor, bytes32 _role) onlyContractOwner() returns(uint) {\n        if (!accessRights[sha3(_actor, _role)]) {\n            accessRights[sha3(_actor, _role)] = true;\n            authorised[_actor] += 1;\n            emitAccessGiven(_actor, _role);\n        }\n\n        return OK;\n    }\n\n    function blockAccess(address _actor, bytes32 _role) onlyContractOwner() returns(uint) {\n        if (accessRights[sha3(_actor, _role)]) {\n            delete accessRights[sha3(_actor, _role)];\n            authorised[_actor] -= 1;\n            if (authorised[_actor] == 0) {\n                delete authorised[_actor];\n            }\n            emitAccessBlocked(_actor, _role);\n        }\n\n        return OK;\n    }\n\n    function isAllowed(address _actor, bytes32 _role) constant returns(bool) {\n        return accessRights[sha3(_actor, _role)] || (this == _actor);\n    }\n\n    function hasAccess(address _actor) constant returns(bool) {\n        return (authorised[_actor] > 0) || (this == _actor);\n    }\n\n    function emitAccessGiven(address _user, bytes32 _role) {\n        AccessGiven(this, _user, _role);\n    }\n\n    function emitAccessBlocked(address _user, bytes32 _role) {\n        AccessBlocked(this, _user, _role);\n    }\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"_user","type":"address"},{"name":"_role","type":"bytes32"}],"name":"emitAccessBlocked","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"emitAccessBlocked(address,bytes32)","signatureHash":"157fbd8d"},{"constant":false,"inputs":[{"name":"_user","type":"address"},{"name":"_role","type":"bytes32"}],"name":"emitAccessGiven","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"emitAccessGiven(address,bytes32)","signatureHash":"2c19d480"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Finalize ownership pass.     * Can only be called by pending owner.","signature":"claimContractOwnership()","signatureHash":"4592cd1d"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"address of the next owner. 0x0 is not allowed."}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Prepares ownership pass.     * Can only be called by current owner.","signature":"changeContractOwnership(address)","signatureHash":"557f4bc9"},{"constant":true,"inputs":[],"name":"pendingContractOwner","payable":false,"stateMutability":"view","type":"function","signature":"pendingContractOwner()","signatureHash":"5aa77d3c"},{"constant":true,"inputs":[{"name":"_actor","type":"address"},{"name":"_role","type":"bytes32"}],"name":"isAllowed","payable":false,"stateMutability":"view","type":"function","signature":"isAllowed(address,bytes32)","signatureHash":"5cb8dd09"},{"constant":true,"inputs":[{"name":"","type":"bytes32"}],"name":"accessRights","payable":false,"stateMutability":"view","type":"function","signature":"accessRights(bytes32)","signatureHash":"7a7f3453"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Destroy contract and scrub a data","notice":"Only owner can call it","signature":"destroy()","signatureHash":"83197ef0"},{"constant":false,"inputs":[{"name":"_actor","type":"address"},{"name":"_role","type":"bytes32"}],"name":"giveAccess","payable":false,"stateMutability":"nonpayable","type":"function","signature":"giveAccess(address,bytes32)","signatureHash":"85c53cf1"},{"constant":true,"inputs":[{"name":"_actor","type":"address"}],"name":"hasAccess","payable":false,"stateMutability":"view","type":"function","signature":"hasAccess(address)","signatureHash":"95a078e8"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"the next contract owner"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Direct ownership pass without change/claim pattern. Can be invoked only by current contract owner","return":"`true` if success, `false` otherwise","signature":"transferContractOwnership(address)","signatureHash":"a843c51f"},{"constant":false,"inputs":[{"name":"_actor","type":"address"},{"name":"_role","type":"bytes32"}],"name":"blockAccess","payable":false,"stateMutability":"nonpayable","type":"function","signature":"blockAccess(address,bytes32)","signatureHash":"bd17a9d8"},{"constant":true,"inputs":[],"name":"contractOwner","payable":false,"stateMutability":"view","type":"function","signature":"contractOwner()","signatureHash":"ce606ee0"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"authorised","payable":false,"stateMutability":"view","type":"function","signature":"authorised(address)","signatureHash":"d6eb1bbf"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","payable":false,"stateMutability":"nonpayable","type":"function","signature":"withdrawnTokens(address[],address)","signatureHash":"d8f9659b"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":false,"name":"actor","type":"address"},{"indexed":false,"name":"role","type":"bytes32"}],"name":"AccessGiven","type":"event","signature":"AccessGiven(address,address,bytes32)","signatureHash":"b6798040"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":false,"name":"actor","type":"address"},{"indexed":false,"name":"role","type":"bytes32"}],"name":"AccessBlocked","type":"event","signature":"AccessBlocked(address,address,bytes32)","signatureHash":"d21adfca"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":false,"name":"errorCode","type":"uint256"}],"name":"Error","type":"event","signature":"Error(address,uint256)","signatureHash":"9cf38cf2"}]}
