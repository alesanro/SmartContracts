{"fileName":"/contracts/exchange/ExchangeManager.sol","name":"ExchangeManager","abi":[{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"init","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"exchanges","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_exchange","type":"address"},{"name":"_owner","type":"address"}],"name":"isExchangeOwner","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_identifier","type":"bytes32"}],"name":"lookupManager","outputs":[{"name":"manager","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"contractsManager","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pendingContractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_eventsHistory","type":"address"}],"name":"setEventsHistory","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"oldExchange","type":"address"},{"name":"newExchange","type":"address"}],"name":"emitExchangeEdited","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_exchange","type":"address"},{"name":"_owner","type":"address"}],"name":"addExchangeOwner","outputs":[{"name":"errorCode","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"exchange","type":"address"},{"name":"count","type":"uint256"}],"name":"emitExchangeAdded","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_exchange","type":"address"},{"name":"data","type":"bytes"}],"name":"forward","outputs":[{"name":"errorCode","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"setContractsManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"getExchangesForOwner","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"exchange","type":"address"},{"name":"count","type":"uint256"}],"name":"emitExchangeCreated","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_exchange","type":"address"}],"name":"getExchangeOwners","outputs":[{"name":"","type":"address[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_exchange","type":"address"}],"name":"removeExchange","outputs":[{"name":"errorCode","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"owner","type":"address"},{"name":"exchange","type":"address"}],"name":"emitExchangeOwnerAdded","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"exchange","type":"address"}],"name":"emitExchangeRemoved","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_exchange","type":"address"}],"name":"addExchange","outputs":[{"name":"errorCode","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"owner","type":"address"},{"name":"exchange","type":"address"}],"name":"emitExchangeOwnerRemoved","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_exchange","type":"address"},{"name":"_owner","type":"address"}],"name":"removeExchangeOwner","outputs":[{"name":"errorCode","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"contractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"},{"name":"_useTicker","type":"bool"}],"name":"createExchange","outputs":[{"name":"errorCode","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"errorCode","type":"uint256"}],"name":"emitError","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_exchangeOld","type":"address"},{"name":"_exchangeNew","type":"address"}],"name":"editExchange","outputs":[{"name":"errorCode","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"key","type":"address"}],"name":"isAuthorized","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEventsHistory","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_store","type":"address"},{"name":"_crate","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"exchange","type":"address"}],"name":"ExchangeRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"exchange","type":"address"},{"indexed":false,"name":"count","type":"uint256"}],"name":"ExchangeAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"oldExchange","type":"address"},{"indexed":false,"name":"newExchange","type":"address"}],"name":"ExchangeEdited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"exchange","type":"address"},{"indexed":false,"name":"count","type":"uint256"}],"name":"ExchangeCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"owner","type":"address"},{"indexed":false,"name":"exchange","type":"address"}],"name":"ExchangeOwnerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"owner","type":"address"},{"indexed":false,"name":"exchange","type":"address"}],"name":"ExchangeOwnerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":false,"name":"errorCode","type":"uint256"}],"name":"Error","type":"event"}],"source":"pragma solidity ^0.4.11;\n\nimport \"../core/common/BaseManager.sol\";\nimport \"./Exchange.sol\";\nimport {ERC20ManagerInterface as ERC20Manager} from \"../core/erc20/ERC20ManagerInterface.sol\";\nimport {ERC20Interface as Asset} from \"../core/erc20/ERC20Interface.sol\";\nimport \"./ExchangeManagerEmitter.sol\";\n\n\ncontract ExchangeManager is ExchangeManagerEmitter, BaseManager {\n  // Exchange Manager errors\n    uint constant ERROR_EXCHANGE_STOCK_NOT_FOUND = 7000;\n    uint constant ERROR_EXCHANGE_STOCK_INVALID_PARAMETER = 7001;\n    uint constant ERROR_EXCHANGE_STOCK_INVALID_INVOCATION = 7002;\n    uint constant ERROR_EXCHANGE_STOCK_ADD_CONTRACT = 7003;\n    uint constant ERROR_EXCHANGE_STOCK_UNABLE_CREATE_EXCHANGE = 7004;\n\n    address[] public exchanges;\n    mapping (address => address[]) owners;\n\n    //Exchanges APIs for rate tracking array\n    //string[] public URLs;\n    //mapping(bytes32 => bool) URLexsist;\n\n    modifier onlyExchangeOwner(address _exchange) {\n        if (isExchangeOwner(_exchange, msg.sender)) {\n            _;\n        }\n    }\n\n    function isExchangeOwner(address _exchange, address _owner) constant returns (bool) {\n        for (uint i = 0; i < owners[_exchange].length; i++) {\n            if (owners[_exchange][i] == _owner) {return true;}\n        }\n        return false;\n    }\n\n    function ExchangeManager(Storage _store, bytes32 _crate) BaseManager(_store, _crate) {\n\n    }\n\n    function init(address _contractsManager) onlyContractOwner returns (uint) {\n        BaseManager.init(_contractsManager, \"ExchangeManager\");\n\n        return OK;\n    }\n\n    function forward(address _exchange, bytes data) onlyExchangeOwner(_exchange) returns (uint errorCode) {\n        if (!Exchange(_exchange).call(data)) {\n            throw;\n        }\n\n        errorCode = OK;\n    }\n\n    function addExchange(address _exchange) returns (uint errorCode) {\n        Exchange(_exchange).buyPrice();\n        Exchange(_exchange).sellPrice();\n        if (owners[_exchange].length == 0) {\n            exchanges.push(_exchange);\n            owners[_exchange].push(msg.sender);\n            _emitExchangeAdded(msg.sender, _exchange, exchanges.length);\n            errorCode = OK;\n        } else {\n            errorCode = _emitError(ERROR_EXCHANGE_STOCK_INVALID_PARAMETER);\n        }\n    }\n\n    function editExchange(address _exchangeOld, address _exchangeNew) onlyExchangeOwner(_exchangeOld) returns (uint errorCode) {\n        for (uint i = 0; i < exchanges.length; i++) {\n            if (exchanges[i] == _exchangeOld) {\n                exchanges[i] = _exchangeNew;\n                exchanges.length -= 1;\n                _emitExchangeEdited(msg.sender, _exchangeOld, _exchangeNew);\n                return OK;\n            }\n        }\n\n        errorCode = _emitError(ERROR_EXCHANGE_STOCK_NOT_FOUND);\n    }\n\n    function removeExchange(address _exchange) onlyExchangeOwner(_exchange) returns (uint errorCode) {\n        for (uint i = 0; i < exchanges.length; i++) {\n            if (exchanges[i] == _exchange) {\n                exchanges[i] = exchanges[exchanges.length - 1];\n                exchanges.length -= 1;\n                break;\n            }\n        }\n        delete owners[_exchange];\n        _emitExchangeRemoved(msg.sender, _exchange);\n        return OK;\n    }\n\n    function createExchange(bytes32 _symbol, bool _useTicker) returns (uint errorCode) {\n        address _erc20Manager = lookupManager(\"ERC20Manager\");\n        address tokenAddr = ERC20Manager(_erc20Manager).getTokenAddressBySymbol(_symbol);\n        address rewards = lookupManager(\"Rewards\");\n\n        if (tokenAddr == 0x0 || rewards == 0x0) {\n            return _emitError(ERROR_EXCHANGE_STOCK_UNABLE_CREATE_EXCHANGE);\n        }\n\n        address exchangeAddr = new Exchange();\n        address tickerAddr;\n        if (_useTicker) {\n            //address tickerAddr = new KrakenPriceTicker();\n        }\n\n        Exchange(exchangeAddr).setupEventsHistory(getEventsHistory());\n        Exchange(exchangeAddr).init(Asset(tokenAddr), rewards, tickerAddr, 10);\n        exchanges.push(exchangeAddr);\n        owners[exchangeAddr].push(msg.sender);\n\n        _emitExchangeCreated(msg.sender, exchangeAddr, exchanges.length);\n        errorCode = OK;\n    }\n\n    function addExchangeOwner(address _exchange, address _owner) onlyExchangeOwner(_exchange) returns (uint errorCode) {\n        for (uint i = 0; i < owners[_exchange].length; i++) {\n            if (owners[_exchange][i] == _owner) {\n                return _emitError(ERROR_EXCHANGE_STOCK_INVALID_PARAMETER);\n            }\n        }\n        owners[_exchange].push(_owner);\n        _emitExchangeOwnerAdded(msg.sender, _owner, _exchange);\n        return OK;\n    }\n\n    function removeExchangeOwner(address _exchange, address _owner) onlyExchangeOwner(_exchange) returns (uint errorCode) {\n        if (_owner == msg.sender) {\n            return _emitError(ERROR_EXCHANGE_STOCK_INVALID_PARAMETER);\n        }\n\n        for (uint i = 0; i < owners[_exchange].length; i++) {\n            if (owners[_exchange][i] == _owner) {\n                owners[_exchange][i] = owners[_exchange][owners[_exchange].length - 1];\n                owners[_exchange].length--;\n                _emitExchangeOwnerRemoved(msg.sender, _owner, _exchange);\n                return OK;\n            }\n        }\n\n        errorCode = _emitError(ERROR_EXCHANGE_STOCK_NOT_FOUND);\n    }\n\n    function getExchangeOwners(address _exchange) constant returns (address[]) {\n        return owners[_exchange];\n    }\n\n    function getExchangesForOwner(address owner) constant returns (address[]) {\n        uint counter;\n        uint i;\n        for (i = 0; i < exchanges.length; i++) {\n            if (isExchangeOwner(exchanges[i], owner))\n            counter++;\n        }\n        address[] memory result = new address[](counter);\n        counter = 0;\n        for (i = 0; i < exchanges.length; i++) {\n            if (isExchangeOwner(exchanges[i], owner)) {\n                result[counter] = exchanges[i];\n                counter++;\n            }\n        }\n        return result;\n    }\n\n    function _emitExchangeRemoved(address user, address exchange) internal {\n        ExchangeManager(getEventsHistory()).emitExchangeRemoved(user, exchange);\n    }\n\n    function _emitExchangeAdded(address user, address exchange, uint count) internal {\n        ExchangeManager(getEventsHistory()).emitExchangeAdded(user, exchange, count);\n    }\n\n    function _emitExchangeEdited(address user, address oldExchange, address newExchange) internal {\n        ExchangeManager(getEventsHistory()).emitExchangeEdited(user, oldExchange, newExchange);\n    }\n\n    function _emitExchangeCreated(address user, address exchange, uint count) internal {\n        ExchangeManager(getEventsHistory()).emitExchangeCreated(user, exchange, count);\n    }\n\n    function _emitExchangeOwnerAdded(address user, address owner, address exchange) internal {\n        ExchangeManager(getEventsHistory()).emitExchangeOwnerAdded(user, owner, exchange);\n    }\n\n    function _emitExchangeOwnerRemoved(address user, address owner, address exchange) internal {\n        ExchangeManager(getEventsHistory()).emitExchangeOwnerRemoved(user, owner, exchange);\n    }\n\n    function _emitError(uint error) internal returns (uint) {\n        ExchangeManager(getEventsHistory()).emitError(error);\n        return error;\n    }\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"init","payable":false,"stateMutability":"nonpayable","type":"function","signature":"init(address)","signatureHash":"19ab453c"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"exchanges","payable":false,"stateMutability":"view","type":"function","signature":"exchanges(uint256)","signatureHash":"2839fc29"},{"constant":false,"inputs":[],"name":"claimContractOwnership","payable":false,"stateMutability":"nonpayable","type":"function","signature":"claimContractOwnership()","signatureHash":"4592cd1d"},{"constant":true,"inputs":[{"name":"_exchange","type":"address"},{"name":"_owner","type":"address"}],"name":"isExchangeOwner","payable":false,"stateMutability":"view","type":"function","signature":"isExchangeOwner(address,address)","signatureHash":"4f5a70ee"},{"constant":true,"inputs":[{"name":"_identifier","type":"bytes32"}],"name":"lookupManager","payable":false,"stateMutability":"view","type":"function","signature":"lookupManager(bytes32)","signatureHash":"4fe59012"},{"constant":true,"inputs":[],"name":"contractsManager","payable":false,"stateMutability":"view","type":"function","signature":"contractsManager()","signatureHash":"53253d31"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","payable":false,"stateMutability":"nonpayable","type":"function","signature":"changeContractOwnership(address)","signatureHash":"557f4bc9"},{"constant":true,"inputs":[],"name":"pendingContractOwner","payable":false,"stateMutability":"view","type":"function","signature":"pendingContractOwner()","signatureHash":"5aa77d3c"},{"constant":false,"inputs":[{"name":"_eventsHistory","type":"address"}],"name":"setEventsHistory","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"setEventsHistory(address)","signatureHash":"6521afd7"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"oldExchange","type":"address"},{"name":"newExchange","type":"address"}],"name":"emitExchangeEdited","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"emitExchangeEdited(address,address,address)","signatureHash":"66706c87"},{"constant":false,"inputs":[{"name":"_exchange","type":"address"},{"name":"_owner","type":"address"}],"name":"addExchangeOwner","payable":false,"stateMutability":"nonpayable","type":"function","signature":"addExchangeOwner(address,address)","signatureHash":"6c597549"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"exchange","type":"address"},{"name":"count","type":"uint256"}],"name":"emitExchangeAdded","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"emitExchangeAdded(address,address,uint256)","signatureHash":"6d231495"},{"constant":false,"inputs":[{"name":"_exchange","type":"address"},{"name":"data","type":"bytes"}],"name":"forward","payable":false,"stateMutability":"nonpayable","type":"function","signature":"forward(address,bytes)","signatureHash":"6fadcf72"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"setContractsManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"setContractsManager(address)","signatureHash":"71d3b573"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"getExchangesForOwner","payable":false,"stateMutability":"view","type":"function","signature":"getExchangesForOwner(address)","signatureHash":"72ffb543"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"exchange","type":"address"},{"name":"count","type":"uint256"}],"name":"emitExchangeCreated","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"emitExchangeCreated(address,address,uint256)","signatureHash":"7c31ceda"},{"constant":true,"inputs":[{"name":"_exchange","type":"address"}],"name":"getExchangeOwners","payable":false,"stateMutability":"view","type":"function","signature":"getExchangeOwners(address)","signatureHash":"7fec4bb2"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"destroy()","signatureHash":"83197ef0"},{"constant":false,"inputs":[{"name":"_exchange","type":"address"}],"name":"removeExchange","payable":false,"stateMutability":"nonpayable","type":"function","signature":"removeExchange(address)","signatureHash":"8e0be369"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"owner","type":"address"},{"name":"exchange","type":"address"}],"name":"emitExchangeOwnerAdded","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"emitExchangeOwnerAdded(address,address,address)","signatureHash":"931927e3"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","payable":false,"stateMutability":"nonpayable","type":"function","signature":"transferContractOwnership(address)","signatureHash":"a843c51f"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"exchange","type":"address"}],"name":"emitExchangeRemoved","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"emitExchangeRemoved(address,address)","signatureHash":"a899ebcd"},{"constant":false,"inputs":[{"name":"_exchange","type":"address"}],"name":"addExchange","payable":false,"stateMutability":"nonpayable","type":"function","signature":"addExchange(address)","signatureHash":"aa10ce22"},{"constant":false,"inputs":[{"name":"user","type":"address"},{"name":"owner","type":"address"},{"name":"exchange","type":"address"}],"name":"emitExchangeOwnerRemoved","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"emitExchangeOwnerRemoved(address,address,address)","signatureHash":"b3836a11"},{"constant":false,"inputs":[{"name":"_exchange","type":"address"},{"name":"_owner","type":"address"}],"name":"removeExchangeOwner","payable":false,"stateMutability":"nonpayable","type":"function","signature":"removeExchangeOwner(address,address)","signatureHash":"b5a48791"},{"constant":true,"inputs":[],"name":"contractOwner","payable":false,"stateMutability":"view","type":"function","signature":"contractOwner()","signatureHash":"ce606ee0"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","payable":false,"stateMutability":"nonpayable","type":"function","signature":"withdrawnTokens(address[],address)","signatureHash":"d8f9659b"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"},{"name":"_useTicker","type":"bool"}],"name":"createExchange","payable":false,"stateMutability":"nonpayable","type":"function","signature":"createExchange(bytes32,bool)","signatureHash":"ddb38f70"},{"constant":false,"inputs":[{"name":"errorCode","type":"uint256"}],"name":"emitError","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"emitError(uint256)","signatureHash":"df26ca08"},{"constant":false,"inputs":[{"name":"_exchangeOld","type":"address"},{"name":"_exchangeNew","type":"address"}],"name":"editExchange","payable":false,"stateMutability":"nonpayable","type":"function","signature":"editExchange(address,address)","signatureHash":"fd83cfac"},{"constant":true,"inputs":[{"name":"key","type":"address"}],"name":"isAuthorized","payable":false,"stateMutability":"view","type":"function","signature":"isAuthorized(address)","signatureHash":"fe9fbb80"},{"constant":true,"inputs":[],"name":"getEventsHistory","payable":false,"stateMutability":"view","type":"function","signature":"getEventsHistory()","signatureHash":"fff10aba"},{"inputs":[{"name":"_store","type":"address"},{"name":"_crate","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"exchange","type":"address"}],"name":"ExchangeRemoved","type":"event","signature":"ExchangeRemoved(address,address,address)","signatureHash":"ca8635f8"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"exchange","type":"address"},{"indexed":false,"name":"count","type":"uint256"}],"name":"ExchangeAdded","type":"event","signature":"ExchangeAdded(address,address,address,uint256)","signatureHash":"dcf10ae5"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"oldExchange","type":"address"},{"indexed":false,"name":"newExchange","type":"address"}],"name":"ExchangeEdited","type":"event","signature":"ExchangeEdited(address,address,address,address)","signatureHash":"12fff04f"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"exchange","type":"address"},{"indexed":false,"name":"count","type":"uint256"}],"name":"ExchangeCreated","type":"event","signature":"ExchangeCreated(address,address,address,uint256)","signatureHash":"ae72fcb3"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"owner","type":"address"},{"indexed":false,"name":"exchange","type":"address"}],"name":"ExchangeOwnerAdded","type":"event","signature":"ExchangeOwnerAdded(address,address,address,address)","signatureHash":"7f1fa1fa"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":true,"name":"user","type":"address"},{"indexed":false,"name":"owner","type":"address"},{"indexed":false,"name":"exchange","type":"address"}],"name":"ExchangeOwnerRemoved","type":"event","signature":"ExchangeOwnerRemoved(address,address,address,address)","signatureHash":"cf88c159"},{"anonymous":false,"inputs":[{"indexed":true,"name":"self","type":"address"},{"indexed":false,"name":"errorCode","type":"uint256"}],"name":"Error","type":"event","signature":"Error(address,uint256)","signatureHash":"9cf38cf2"}]}
