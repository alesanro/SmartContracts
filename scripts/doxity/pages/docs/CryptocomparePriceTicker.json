{"title":"CryptoCompare Price Ticker","fileName":"/contracts/crowdsale/pricetickers/CryptocomparePriceTicker.sol","name":"CryptocomparePriceTicker","abi":[{"constant":false,"inputs":[{"name":"_fsym","type":"bytes32"},{"name":"_tsym","type":"bytes32"}],"name":"requestPrice","outputs":[{"name":"","type":"bytes32"},{"name":"","type":"uint256"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"name":"_queryId","type":"bytes32"},{"name":"_result","type":"string"}],"name":"__callback","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pendingContractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_fsym","type":"bytes32"},{"name":"_tsym","type":"bytes32"}],"name":"price","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"contractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_fsym","type":"bytes32"},{"name":"_tsym","type":"bytes32"}],"name":"isPriceAvailable","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"}],"source":"pragma solidity ^0.4.11;\n\nimport \"../../core/common/Object.sol\";\nimport \"../base/PriceTicker.sol\";\n\n/**\n*  @title CryptoCompare Price Ticker\n*/\ncontract CryptocomparePriceTicker is PriceTicker, Object {\n    uint constant EXCHANGE_RATE_DECIMALS = 18;\n    uint constant TTL = 60000;\n\n    struct ExchangePrice {\n        uint rate;\n        uint expiry;\n    }\n\n    struct Query {\n        address sender;\n        bytes32 hash;\n    }\n\n    /* bytes32(from, to) -> price * 10**EXCHANGE_RATE_DECIMALS */\n    mapping (bytes32 => ExchangePrice) exchangePrices;\n    /* query id -> original sender */\n    mapping (bytes32 => Query) queries;\n\n    /**\n    *  Only Oraclize access rights checks\n    */\n    modifier onlyOraclize() {\n        _;\n    }\n\n    /**\n    *  Implement PriceTicker interface.\n    */\n    function isPriceAvailable(bytes32 _fsym, bytes32 _tsym) constant returns (bool) {\n        if (isEquivalentSymbol(_fsym, _tsym)) return true;\n\n        ExchangePrice memory exchangePrice = exchangePrices[sha3(_fsym, _tsym)];\n        return exchangePrice.expiry < now;\n    }\n\n    /**\n    *  Implement PriceTicker interface.\n    */\n    function price(bytes32 _fsym, bytes32 _tsym) constant returns (uint, uint) {\n        if (isEquivalentSymbol(_fsym, _tsym)) return (1, 0);\n\n        ExchangePrice memory exchangePrice = exchangePrices[sha3(_fsym, _tsym)];\n        return (exchangePrice.rate, EXCHANGE_RATE_DECIMALS);\n    }\n\n    /**\n    *  Implement PriceTicker interface.\n    */\n    function requestPrice(bytes32 _fsym, bytes32 _tsym) payable returns (bytes32, uint) {\n        assert(!isEquivalentSymbol(_fsym, _tsym));\n\n        if (_fsym == _tsym) {\n            return (0x0, PRICE_TICKER_INVALID_INVOCATION);\n        }\n\n        if (isPriceAvailable(_fsym, _tsym)) {\n            return (0x0, PRICE_TICKER_INVALID_INVOCATION);\n        }\n\n        var (queryId, resultCode) = updatePrice(_fsym, _tsym, msg.sender);\n        if (resultCode != OK) {\n            return (0x0, resultCode);\n        }\n\n        return (queryId, OK);\n    }\n\n    /**\n    *  Oraclize query callback.\n    */\n    function __callback(bytes32 _queryId, string _result) onlyOraclize {\n        revert();\n    }\n\n    /**\n    *\n    */\n    function updatePrice(bytes32 _fsym, bytes32 _tsym, address _sender) internal returns (bytes32, uint) {\n        assert(!isEquivalentSymbol(_fsym, _tsym));\n        assert(_sender != 0x0);\n\n        return (0x0, PRICE_TICKER_INVALID_INVOCATION);\n    }\n\n    function isEquivalentSymbol(bytes32 _fsym, bytes32 _tsym) internal constant returns (bool) {\n        if (_fsym == _tsym) return true;\n        if (_fsym == \"Ether\" && _tsym == \"ETH\") return true;\n        if (_fsym == \"ETH\" && _tsym == \"Ether\") return true;\n\n        return false;\n    }\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"_fsym","type":"bytes32"},{"name":"_tsym","type":"bytes32"}],"name":"requestPrice","payable":true,"stateMutability":"payable","type":"function","notice":"Implement PriceTicker interface.","signature":"requestPrice(bytes32,bytes32)","signatureHash":"06915ba3"},{"constant":false,"inputs":[{"name":"_queryId","type":"bytes32"},{"name":"_result","type":"string"}],"name":"__callback","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"Oraclize query callback.","signature":"__callback(bytes32,string)","signatureHash":"27dc297e"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Finalize ownership pass.     * Can only be called by pending owner.","signature":"claimContractOwnership()","signatureHash":"4592cd1d"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"address of the next owner. 0x0 is not allowed."}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Prepares ownership pass.     * Can only be called by current owner.","signature":"changeContractOwnership(address)","signatureHash":"557f4bc9"},{"constant":true,"inputs":[],"name":"pendingContractOwner","payable":false,"stateMutability":"view","type":"function","signature":"pendingContractOwner()","signatureHash":"5aa77d3c"},{"constant":true,"inputs":[{"name":"_fsym","type":"bytes32"},{"name":"_tsym","type":"bytes32"}],"name":"price","payable":false,"stateMutability":"view","type":"function","notice":"Implement PriceTicker interface.","signature":"price(bytes32,bytes32)","signatureHash":"7d5ecbab"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Destroy contract and scrub a data","notice":"Only owner can call it","signature":"destroy()","signatureHash":"83197ef0"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"the next contract owner"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Direct ownership pass without change/claim pattern. Can be invoked only by current contract owner","return":"`true` if success, `false` otherwise","signature":"transferContractOwnership(address)","signatureHash":"a843c51f"},{"constant":true,"inputs":[],"name":"contractOwner","payable":false,"stateMutability":"view","type":"function","signature":"contractOwner()","signatureHash":"ce606ee0"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","payable":false,"stateMutability":"nonpayable","type":"function","signature":"withdrawnTokens(address[],address)","signatureHash":"d8f9659b"},{"constant":true,"inputs":[{"name":"_fsym","type":"bytes32"},{"name":"_tsym","type":"bytes32"}],"name":"isPriceAvailable","payable":false,"stateMutability":"view","type":"function","notice":"Implement PriceTicker interface.","signature":"isPriceAvailable(bytes32,bytes32)","signatureHash":"e5a59e07"}]}
