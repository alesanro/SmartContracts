{"title":"BlockLimitedCrowdsaleFactory *  Instantiates a BlockLimitedCrowdsale contract.","fileName":"/contracts/crowdsale/CrowdsaleFactory.sol","name":"BlockLimitedCrowdsaleFactory","abi":[{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_identifier","type":"bytes32"}],"name":"lookupManager","outputs":[{"name":"manager","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"contractsManager","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pendingContractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_priceTiker","type":"address"}],"name":"setPriceTicker","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_eventsHistory","type":"address"}],"name":"setEventsHistory","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"setContractsManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getPriceTicker","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"contractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"},{"name":"_priceTiker","type":"address"}],"name":"init","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"}],"name":"createCrowdsale","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"key","type":"address"}],"name":"isAuthorized","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getEventsHistory","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_store","type":"address"},{"name":"_crate","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"source":"pragma solidity ^0.4.11;\n\nimport \"./crowdsales/BlockLimitedCrowdsale.sol\";\nimport \"./crowdsales/TimeLimitedCrowdsale.sol\";\nimport \"../core/common/BaseManager.sol\";\n\n/**\n*  @title CrowdsaleFactory\n*\n*  Is not designed for direct crowdsale creation via external calls from web application.\n*  Only CrowdsaleManager is authorised to create and delete crowdsale.\n*\n*  See CrowdsaleManager.\n*/\ncontract CrowdsaleFactory is BaseManager {\n    StorageInterface.Address priceTiker;\n\n    modifier onlyCrowdsaleManager() {\n        if (msg.sender == lookupManager(\"CrowdsaleManager\")) {\n            _;\n        }\n    }\n\n    function CrowdsaleFactory(Storage _store, bytes32 _crate) BaseManager(_store, _crate) {\n        priceTiker.init(\"priceTiker\");\n    }\n\n    function init(address _contractsManager, address _priceTiker) onlyContractOwner returns (uint) {\n        BaseManager.init(_contractsManager, store.crate);\n\n        setPriceTicker(_priceTiker);\n        return OK;\n    }\n\n    function setPriceTicker(address _priceTiker) onlyContractOwner {\n        require(_priceTiker != 0x0);\n\n        store.set(priceTiker, _priceTiker);\n    }\n\n    function createCrowdsale(bytes32 _symbol) returns (address);\n\n    function getPriceTicker() constant returns (address) {\n        return store.get(priceTiker);\n    }\n}\n\n/**\n*  @title TimeLimitedCrowdsaleFactory\n*\n*  Instantiates a TimeLimitedCrowdsale contract.\n*/\ncontract TimeLimitedCrowdsaleFactory is CrowdsaleFactory {\n    function TimeLimitedCrowdsaleFactory(Storage _store, bytes32 _crate) CrowdsaleFactory(_store, _crate) {\n    }\n\n    function createCrowdsale(bytes32 _symbol) onlyCrowdsaleManager returns (address) {\n        require(_symbol != 0x0);\n\n        address crowdsale = new TimeLimitedCrowdsale(contractsManager, _symbol, getPriceTicker());\n        BaseCrowdsale(crowdsale).changeContractOwnership(msg.sender);\n\n        return crowdsale;\n    }\n}\n\n/**\n*  @title BlockLimitedCrowdsaleFactory\n*\n*  Instantiates a BlockLimitedCrowdsale contract.\n*/\ncontract BlockLimitedCrowdsaleFactory is CrowdsaleFactory {\n    function BlockLimitedCrowdsaleFactory(Storage _store, bytes32 _crate) CrowdsaleFactory(_store, _crate) {\n    }\n\n    function createCrowdsale(bytes32 _symbol) onlyCrowdsaleManager returns (address) {\n        require(_symbol != 0x0);\n\n        address crowdsale = new BlockLimitedCrowdsale(contractsManager, _symbol, getPriceTicker());\n        BaseCrowdsale(crowdsale).changeContractOwnership(msg.sender);\n\n        return crowdsale;\n    }\n}\n","abiDocs":[{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Finalize ownership pass.     * Can only be called by pending owner.","signature":"claimContractOwnership()","signatureHash":"4592cd1d"},{"constant":true,"inputs":[{"name":"_identifier","type":"bytes32","description":"is a manager's identifier. 0x0 is not allowed."}],"name":"lookupManager","payable":false,"stateMutability":"view","type":"function","details":"Returns manager's address by its identifier (type).","notice":"Will crash if no manager in the system with given identifier.","signature":"lookupManager(bytes32)","signatureHash":"4fe59012"},{"constant":true,"inputs":[],"name":"contractsManager","payable":false,"stateMutability":"view","type":"function","signature":"contractsManager()","signatureHash":"53253d31"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"address of the next owner. 0x0 is not allowed."}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"success.","notice":"Prepares ownership pass.     * Can only be called by current owner.","signature":"changeContractOwnership(address)","signatureHash":"557f4bc9"},{"constant":true,"inputs":[],"name":"pendingContractOwner","payable":false,"stateMutability":"view","type":"function","signature":"pendingContractOwner()","signatureHash":"5aa77d3c"},{"constant":false,"inputs":[{"name":"_priceTiker","type":"address"}],"name":"setPriceTicker","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"setPriceTicker(address)","signatureHash":"5e8fac66"},{"constant":false,"inputs":[{"name":"_eventsHistory","type":"address"}],"name":"setEventsHistory","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"setEventsHistory(address)","signatureHash":"6521afd7"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address","description":"contracts manager. 0x0 is not allowed."}],"name":"setContractsManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Setter for ContractsManager. Force overrides currect manager.","signature":"setContractsManager(address)","signatureHash":"71d3b573"},{"constant":true,"inputs":[],"name":"getPriceTicker","payable":false,"stateMutability":"view","type":"function","signature":"getPriceTicker()","signatureHash":"7ea91547"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"destroy()","signatureHash":"83197ef0"},{"constant":false,"inputs":[{"name":"_to","type":"address","description":"the next contract owner"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Direct ownership pass without change/claim pattern. Can be invoked only by current contract owner","return":"`true` if success, `false` otherwise","signature":"transferContractOwnership(address)","signatureHash":"a843c51f"},{"constant":true,"inputs":[],"name":"contractOwner","payable":false,"stateMutability":"view","type":"function","signature":"contractOwner()","signatureHash":"ce606ee0"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","payable":false,"stateMutability":"nonpayable","type":"function","signature":"withdrawnTokens(address[],address)","signatureHash":"d8f9659b"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"},{"name":"_priceTiker","type":"address"}],"name":"init","payable":false,"stateMutability":"nonpayable","type":"function","signature":"init(address,address)","signatureHash":"f09a4016"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"}],"name":"createCrowdsale","payable":false,"stateMutability":"nonpayable","type":"function","signature":"createCrowdsale(bytes32)","signatureHash":"f40444d7"},{"constant":true,"inputs":[{"name":"key","type":"address"}],"name":"isAuthorized","payable":false,"stateMutability":"view","type":"function","signature":"isAuthorized(address)","signatureHash":"fe9fbb80"},{"constant":true,"inputs":[],"name":"getEventsHistory","payable":false,"stateMutability":"view","type":"function","signature":"getEventsHistory()","signatureHash":"fff10aba"},{"inputs":[{"name":"_store","type":"address"},{"name":"_crate","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]}
