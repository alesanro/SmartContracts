{"fileName":"/contracts/loc/LOCWallet.sol","name":"LOCWallet","abi":[{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"init","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"}],"name":"fallbackAsset","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"},{"name":"_to","type":"address"}],"name":"fallbackAssetPassOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"claimContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_identifier","type":"bytes32"}],"name":"lookupManager","outputs":[{"name":"manager","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"},{"name":"_from","type":"address"},{"name":"_data","type":"bytes"}],"name":"fallbackAssetInvoke","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"contractsManager","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"pendingContractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_platform","type":"address"},{"name":"_symbol","type":"bytes32"},{"name":"_amount","type":"uint256"}],"name":"revoke","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"setContractsManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_asset","type":"address"},{"name":"_from","type":"address"},{"name":"_amount","type":"uint256"}],"name":"deposit","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_platform","type":"address"},{"name":"_symbol","type":"bytes32"},{"name":"_amount","type":"uint256"}],"name":"reissue","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"}],"name":"destroy","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"contractOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_asset","type":"address"},{"name":"_to","type":"address"},{"name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"key","type":"address"}],"name":"isAuthorized","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_store","type":"address"},{"name":"_crate","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"source":"pragma solidity ^0.4.11;\n\nimport \"./ReissuableWalletInterface.sol\";\nimport \"../core/common/Managed.sol\";\nimport \"../core/erc20/ERC20Interface.sol\";\nimport \"../core/platform/ChronoBankPlatformInterface.sol\";\nimport \"../assets/AssetsManagerInterface.sol\";\nimport \"../assets/TokenManagementInterface.sol\";\nimport \"../assets/ChronoBankWalletFallbackSupporter.sol\";\n\n\n/**\n* @title LOCManager's wallet contract defines a basic implementation of DepositWalletInterface\n* to provide a way to store/deposit/withdraw tokens on this contract according to access rights.\n* Here deposit/withdraw are allowed only by LOCManager contract.\n*\n* @dev Specifies a contract that helps in updating LOCManager interface by delegating token's ownership\n* to LOCManagerWallet contract\n*/\ncontract LOCWallet is ReissuableWalletInterface, ChronoBankWalletFallbackSupporter {\n\n    /**\n    * Restricts calls only for LOCManager contract\n    */\n    modifier onlyLOCManager() {\n        if (msg.sender != lookupManager(\"LOCManager\")) {\n            revert();\n        }\n        _;\n    }\n\n    function LOCWallet(Storage _store, bytes32 _crate) ChronoBankWalletFallbackSupporter(_store, _crate) {\n    }\n\n    /**\n    * Initializes contract with its ready-to-use state\n    *\n    * @param _contractsManager contracts manager address\n    *\n    * @return `true` if all went okay, `false` otherwise\n    */\n    function init(address _contractsManager) onlyContractOwner returns (bool) {\n        contractsManager = _contractsManager;\n        return true;\n    }\n\n    /**\n    * Allows contract owner to destroy a contract and withdraw all tokens associated\n    * with this address to a message sender\n    * @dev Allowed only for contract owner\n    *\n    * @param tokens an array of ERC20-compatible assets\n    *\n    * @return result code of an operation\n    */\n    function destroy(address[] tokens) onlyContractOwner returns (uint) {\n        withdrawnTokens(tokens, msg.sender);\n        selfdestruct(msg.sender);\n        return OK;\n    }\n\n    /**\n    * Forbidden to invoke this implementation of destroy method. See another one which takes tokens' addresses\n    * @dev Reverts all actions when this method was invoked\n    */\n    function destroy() onlyContractOwner {\n        revert();\n    }\n\n    /**\n    * Performs reissuing of an asset in provided platform for a specified amount.\n    * @dev Allowed only for LOCManager\n    *\n    * @param _platform platform address\n    * @param _symbol asset that is registered in a platform and needed to be reissued\n    * @param _amount a number of tokens to reissue\n    *\n    * @return result code of an operation\n    */\n    function reissue(address _platform, bytes32 _symbol, uint256 _amount) onlyLOCManager public returns (uint) {\n        address _assetsManager = lookupManager(\"AssetsManager\");\n        address _tokenExtension = AssetsManagerInterface(_assetsManager).getTokenExtension(_platform);\n        if (_tokenExtension == 0x0) {\n            return ChronoBankPlatformInterface(_platform).reissueAsset(_symbol, _amount);\n        }\n\n        return TokenManagementInterface(_tokenExtension).getReissueAssetProxy().reissueAsset(_symbol, _amount);\n    }\n\n    /**\n    * Performs revokation of an asset in provided platform for a specified amount.\n    * @dev Allowed only for LOCManager\n    *\n    * @param _platform platform address\n    * @param _symbol asset that is registered in a platform and needed to be revoked\n    * @param _amount a number of tokens to revoke\n    *\n    * @return result code of an operation\n    */\n    function revoke(address _platform, bytes32 _symbol, uint256 _amount) onlyLOCManager public returns (uint) {\n        address _assetsManager = lookupManager(\"AssetsManager\");\n        address _tokenExtension = AssetsManagerInterface(_assetsManager).getTokenExtension(_platform);\n        if (_tokenExtension == 0x0) {\n            return ChronoBankPlatformInterface(_platform).revokeAsset(_symbol, _amount);\n        }\n\n        return TokenManagementInterface(_tokenExtension).getRevokeAssetProxy().revokeAsset(_symbol, _amount);\n    }\n\n    /**\n    * Deposits some amount of tokens on wallet's account using ERC20 tokens\n    *\n    * @dev Allowed only for locManager\n    *\n    * @param _asset an address of token\n    * @param _from an address of a sender who is willing to transfer her resources\n    * @param _amount an amount of tokens (resources) a sender wants to transfer\n    *\n    * @return `true` if all successfuly completed, `false` otherwise\n    */\n    function deposit(address _asset, address _from, uint256 _amount) onlyLOCManager public returns (bool) {\n        return ERC20Interface(_asset).transferFrom(_from, this, _amount);\n    }\n\n    /**\n    * Withdraws some amount of tokens from wallet's account using ERC20 tokens\n    *\n    * @dev Allowed only for locManager\n    *\n    * @param _asset an address of token\n    * @param _to an address of a receiver who is willing to get stored resources\n    * @param _amount an amount of tokens (resources) a receiver wants to get\n    *\n    * @return `true` if all successfuly completed, `false` otherwise\n    */\n    function withdraw(address _asset, address _to, uint256 _amount) onlyLOCManager public returns (bool) {\n        return ERC20Interface(_asset).transfer(_to, _amount);\n    }\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"init","payable":false,"stateMutability":"nonpayable","type":"function","signature":"init(address)","signatureHash":"19ab453c"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"}],"name":"fallbackAsset","payable":false,"stateMutability":"nonpayable","type":"function","signature":"fallbackAsset(bytes32)","signatureHash":"306a547d"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"},{"name":"_to","type":"address"}],"name":"fallbackAssetPassOwnership","payable":false,"stateMutability":"nonpayable","type":"function","signature":"fallbackAssetPassOwnership(bytes32,address)","signatureHash":"44fc19cc"},{"constant":false,"inputs":[],"name":"claimContractOwnership","payable":false,"stateMutability":"nonpayable","type":"function","signature":"claimContractOwnership()","signatureHash":"4592cd1d"},{"constant":true,"inputs":[{"name":"_identifier","type":"bytes32"}],"name":"lookupManager","payable":false,"stateMutability":"view","type":"function","signature":"lookupManager(bytes32)","signatureHash":"4fe59012"},{"constant":false,"inputs":[{"name":"_symbol","type":"bytes32"},{"name":"_from","type":"address"},{"name":"_data","type":"bytes"}],"name":"fallbackAssetInvoke","payable":false,"stateMutability":"nonpayable","type":"function","signature":"fallbackAssetInvoke(bytes32,address,bytes)","signatureHash":"51ae07d9"},{"constant":true,"inputs":[],"name":"contractsManager","payable":false,"stateMutability":"view","type":"function","signature":"contractsManager()","signatureHash":"53253d31"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"changeContractOwnership","payable":false,"stateMutability":"nonpayable","type":"function","signature":"changeContractOwnership(address)","signatureHash":"557f4bc9"},{"constant":true,"inputs":[],"name":"pendingContractOwner","payable":false,"stateMutability":"view","type":"function","signature":"pendingContractOwner()","signatureHash":"5aa77d3c"},{"constant":false,"inputs":[{"name":"_platform","type":"address"},{"name":"_symbol","type":"bytes32"},{"name":"_amount","type":"uint256"}],"name":"revoke","payable":false,"stateMutability":"nonpayable","type":"function","signature":"revoke(address,bytes32,uint256)","signatureHash":"6d5aa458"},{"constant":false,"inputs":[{"name":"_contractsManager","type":"address"}],"name":"setContractsManager","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"setContractsManager(address)","signatureHash":"71d3b573"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"destroy()","signatureHash":"83197ef0"},{"constant":false,"inputs":[{"name":"_asset","type":"address"},{"name":"_from","type":"address"},{"name":"_amount","type":"uint256"}],"name":"deposit","payable":false,"stateMutability":"nonpayable","type":"function","signature":"deposit(address,address,uint256)","signatureHash":"8340f549"},{"constant":false,"inputs":[{"name":"_to","type":"address"}],"name":"transferContractOwnership","payable":false,"stateMutability":"nonpayable","type":"function","signature":"transferContractOwnership(address)","signatureHash":"a843c51f"},{"constant":false,"inputs":[{"name":"_platform","type":"address"},{"name":"_symbol","type":"bytes32"},{"name":"_amount","type":"uint256"}],"name":"reissue","payable":false,"stateMutability":"nonpayable","type":"function","signature":"reissue(address,bytes32,uint256)","signatureHash":"b682da53"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"}],"name":"destroy","payable":false,"stateMutability":"nonpayable","type":"function","signature":"destroy(address[])","signatureHash":"c6786e5a"},{"constant":true,"inputs":[],"name":"contractOwner","payable":false,"stateMutability":"view","type":"function","signature":"contractOwner()","signatureHash":"ce606ee0"},{"constant":false,"inputs":[{"name":"tokens","type":"address[]"},{"name":"_to","type":"address"}],"name":"withdrawnTokens","payable":false,"stateMutability":"nonpayable","type":"function","signature":"withdrawnTokens(address[],address)","signatureHash":"d8f9659b"},{"constant":false,"inputs":[{"name":"_asset","type":"address"},{"name":"_to","type":"address"},{"name":"_amount","type":"uint256"}],"name":"withdraw","payable":false,"stateMutability":"nonpayable","type":"function","signature":"withdraw(address,address,uint256)","signatureHash":"d9caed12"},{"constant":true,"inputs":[{"name":"key","type":"address"}],"name":"isAuthorized","payable":false,"stateMutability":"view","type":"function","signature":"isAuthorized(address)","signatureHash":"fe9fbb80"},{"inputs":[{"name":"_store","type":"address"},{"name":"_crate","type":"bytes32"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]}
